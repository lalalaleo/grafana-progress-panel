{"version":3,"sources":["../src/progresschart_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","ProgressChartCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","colorArr","progressArr","barsArr","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","addProgress","addBarMember","delProgress","delBarMember","subItem","obj","format","value","valueShow","formatValue","render","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","series","data","parseSeries","targets","seriesFull","length","fillFlag","i","j","sLen","item","filter","target","push","splice","datapoints","checkSeries","that","forEach","index","arr","perValue","percent","total","proLen","perTotal","indTmp","seriesData","dataList","map","seriesHandler","objTemp","label","unit","type","scope","elem","$panelContainer","find","$progressPanel","css","offsetHeight","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,mB,kBAAAA,gB;;AACDC,I;;AACAC,M;;;;;;;;;;;;;;;;;;;;;gCAGMC,iB;;;AAEX,+BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,uIACnCF,MADmC,EAC3BC,SAD2B;;AAEzC,WAAKC,UAAL,GAAkBA,UAAlB;AACA,WAAKC,YAAL,GAAoB,EAApB;;AAEA,SAAIC,gBAAgB;AACtBC,gBAAS,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAAyC,SAAzC,CADa;AAEtBC,mBAAY,EAFU;AAGtBC,eAAQ;AAHc,MAApB;;AAMAV,OAAEW,QAAF,CAAW,MAAKC,KAAhB,EAAuBL,aAAvB;;AAEA,WAAKM,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,WAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,WAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKI,WAAL,CAAiBF,IAAjB,OAA7B;AACA,WAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKG,cAAL,CAAoBD,IAApB,OAArC;AACA,WAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKK,cAAL,CAAoBH,IAApB,OAAjC;AAjByC;AAkB1C;;;;sCAEgB;AACf,WAAKI,YAAL,CAAkB,SAAlB,EAA6B,mDAA7B,EAAkF,CAAlF;AACA,WAAKC,WAAL,GAAmBpB,IAAIqB,cAAJ,EAAnB;AACH,WAAKC,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB;AACA,WAAKQ,YAAL,CAAkBR,IAAlB,CAAuB,IAAvB;AACA,WAAKS,WAAL,CAAiBT,IAAjB,CAAsB,IAAtB;AACA,WAAKU,YAAL,CAAkBV,IAAlB,CAAuB,IAAvB;AACE;;;mCAEaW,O,EAASC,G,EAAK;AAC7BA,UAAIC,MAAJ,GAAaF,QAAQG,KAArB;AACAF,UAAIG,SAAJ,GAAgB,KAAKC,WAAL,CAAiBJ,IAAIE,KAArB,EAA4BH,QAAQG,KAApC,CAAhB;AACG,WAAKG,MAAL;AACD;;;yCAEmBH,K,EAAO;AACzB,UAAI9B,EAAEkC,QAAF,CAAW,KAAKtB,KAAL,CAAWuB,QAAtB,CAAJ,EAAqC;AACnC,cAAO,EAAEA,UAAU,KAAKvB,KAAL,CAAWuB,QAAvB,EAAiCC,gBAAgB,IAAjD,EAAP;AACD;;AAED,UAAIC,QAAQP,QAAQ,CAApB;AACA,UAAIQ,MAAM,CAACC,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASJ,KAAT,IAAkBE,KAAKG,IAAlC,CAAX;;AAEA,UAAIC,OAAOJ,KAAKK,GAAL,CAAS,EAAT,EAAa,CAACN,GAAd,CAAX;AACA,UAAIO,OAAOR,QAAQM,IAAnB,CATyB,CASA;AACzB,UAAIG,IAAJ;;AAEA,UAAID,OAAO,GAAX,EAAgB;AACdC,cAAO,CAAP;AACD,OAFD,MAEO,IAAID,OAAO,CAAX,EAAc;AACnBC,cAAO,CAAP;AACA;AACA,WAAID,OAAO,IAAX,EAAiB;AACfC,eAAO,GAAP;AACA,UAAER,GAAF;AACD;AACF,OAPM,MAOA,IAAIO,OAAO,GAAX,EAAgB;AACrBC,cAAO,CAAP;AACD,OAFM,MAEA;AACLA,cAAO,EAAP;AACD;;AAEDA,cAAQH,IAAR;;AAEA;AACA,UAAIJ,KAAKC,KAAL,CAAWV,KAAX,MAAsBA,KAA1B,EAAiC;AAAEQ,aAAM,CAAN;AAAU;;AAE7C,UAAIS,SAAS,EAAb;AACAA,aAAOZ,QAAP,GAAkBI,KAAKS,GAAL,CAAS,CAAT,EAAYV,GAAZ,CAAlB;AACAS,aAAOX,cAAP,GAAwBW,OAAOZ,QAAP,GAAkBI,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASK,IAAT,IAAiBP,KAAKG,IAAjC,CAAlB,GAA2D,CAAnF;;AAEA,aAAOK,MAAP;AACD;;;iCAEWjB,K,EAAOD,M,EAAQ;AACzB,UAAIoB,cAAc,KAAKC,mBAAL,CAAyBpB,KAAzB,CAAlB;AACA,UAAIqB,aAAalD,IAAImD,YAAJ,CAAiBvB,MAAjB,CAAjB;AACA,UAAIsB,UAAJ,EAAgB;AACd,cAAOA,WAAWrB,KAAX,EAAkBmB,YAAYd,QAA9B,EAAwCc,YAAYb,cAApD,CAAP;AACD;AACD,aAAON,KAAP;AACD;;;mCAEa;AACZ,WAAKuB,MAAL,GAAc,EAAd;AACA,WAAKpB,MAAL;AACD;;;gCAEU;AACT,WAAKqB,IAAL,GAAY,KAAKC,WAAL,CAAiB,KAAKF,MAAtB,CAAZ;AACD;;;iCAEWG,O,EAASH,M,EAAO;AAC7B,UAAII,aAAa,EAAjB;AACA,UAAGD,QAAQE,MAAR,IAAkBL,OAAOK,MAA5B,EAAmC;AAClC,cAAOD,aAAaJ,MAApB;AACA,OAFD,MAEK;AACJ,WAAIM,WAAW,KAAf;AACA,YAAI,IAAIC,IAAE,CAAN,EAAQF,SAASF,QAAQE,MAA7B,EAAqCE,IAAEF,MAAvC,EAA+CE,GAA/C,EAAmD;AAClD,aAAI,IAAIC,IAAE,CAAN,EAAQC,OAAOT,OAAOK,MAA1B,EAAkCG,IAAEC,IAApC,EAA0CD,GAA1C,EAA8C;AAC7C,aAAGL,QAAQI,CAAR,EAAWG,IAAX,CAAgBC,MAAhB,IAA0BX,OAAOQ,CAAP,EAAUI,MAAvC,EAA8C;AAC7CR,qBAAWS,IAAX,CAAgBb,OAAOQ,CAAP,CAAhB;AACAF,qBAAW,KAAX;AACA;AACA,UAJD,MAIK;AACJA,qBAAW,IAAX;AACA;AACD;AACD,YAAGA,QAAH,EAAY;AACXF,oBAAWU,MAAX,CAAkBP,CAAlB,EAAqB,CAArB,EAAwB,EAAC,UAASJ,QAAQI,CAAR,EAAWG,IAAX,CAAgBC,MAA1B,EAAkCI,YAAW,EAA7C,EAAxB;AACA;AACD;AACD;AACD,aAAOX,UAAP;AACE;;;iCAEWJ,M,EAAQ;AACrB,UAAGA,UAAUA,OAAOK,MAAP,GAAgB,CAA7B,EAA+B;AAC9BL,gBAAS,KAAKgB,WAAL,CAAiB,KAAKzD,KAAL,CAAW4C,OAA5B,EAAqCH,MAArC,CAAT;AACA,WAAIiB,OAAO,IAAX;AACA,YAAK1D,KAAL,CAAWH,WAAX,CAAuB8D,OAAvB,CAA+B,UAASzC,KAAT,EAAgB0C,KAAhB,EAAuBC,GAAvB,EAA2B;AACxD,YAAGpB,OAAOmB,KAAP,KAAiBnB,OAAOmB,KAAP,EAAcJ,UAAlC,EAA6C;AAC5C,aAAIA,aAAaf,OAAOmB,KAAP,EAAcJ,UAA/B;AACA,aAAGA,WAAWV,MAAX,GAAoB,CAAvB,EAAyB;AACxB5B,gBAAMA,KAAN,GAAcsC,WAAWA,WAAWV,MAAX,GAAkB,CAA7B,EAAgC,CAAhC,CAAd;AACA5B,gBAAMC,SAAN,GAAkBuC,KAAKtC,WAAL,CAAiBF,MAAMA,KAAvB,EAA8BA,MAAMD,MAApC,CAAlB;AACA,cAAI6C,WAAWN,WAAWA,WAAWV,MAAX,GAAkB,CAA7B,EAAgC,CAAhC,CAAf;AACA,cAAGgB,WAAS,GAAZ,EAAgB;AACfA,sBAAW,GAAX;AACA;AACD,cAAGA,WAAW,CAAd,EAAgB;AACfA,sBAAW,CAAX;AACA;AACD5C,gBAAM6C,OAAN,GAAgBD,WAAS,GAAzB;AACA,UAXD,MAWK;AACJ5C,gBAAMA,KAAN,GAAc,CAAd;AACAA,gBAAMC,SAAN,GAAkB,KAAlB;AACAD,gBAAM6C,OAAN,GAAgB,IAAhB;AACA;AACD;AACF,QApBD;;AAsBA,WAAIC,QAAQ,CAAZ;AACA,WAAIC,SAAS,KAAKjE,KAAL,CAAWH,WAAX,CAAuBiD,MAApC;AACA,WAAIoB,WAAW,CAAf;AACA,YAAI,IAAIlB,IAAE,CAAV,EAAaA,IAAE,KAAKhD,KAAL,CAAWF,OAAX,CAAmBgD,MAAlC,EAA0CE,GAA1C,EAA8C;AAC7C,YAAImB,SAASF,SAASjB,CAAtB;AACA,YAAGP,OAAO0B,MAAP,KAAkB1B,OAAO0B,MAAP,EAAeX,UAApC,EAA+C;AAC7C,aAAIA,aAAaf,OAAO0B,MAAP,EAAeX,UAAhC;AACA,aAAGA,WAAWV,MAAX,GAAoB,CAAvB,EAAyB;AACxB,eAAK9C,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB9B,KAAtB,GAA8BsC,WAAWA,WAAWV,MAAX,GAAkB,CAA7B,EAAgC,CAAhC,CAA9B;AACAkB,mBAAS,KAAKhE,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB9B,KAA/B;AACA,eAAKlB,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB7B,SAAtB,GAAkC,KAAKC,WAAL,CAAiB,KAAKpB,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB9B,KAAvC,EAA8C,KAAKlB,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB/B,MAApE,CAAlC;AACA,UAJD,MAIK;AACJ,eAAKjB,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB9B,KAAtB,GAA8B,CAA9B;AACA,eAAKlB,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB7B,SAAtB,GAAkC,KAAlC;AACA;AACF,SAVD,MAUK;AACH6C,kBAAS,KAAKhE,KAAL,CAAWF,OAAX,CAAmBkD,CAAnB,EAAsB9B,KAA/B;AACD;AACD;AACD,YAAKlB,KAAL,CAAWF,OAAX,CAAmB6D,OAAnB,CAA2B,UAASzC,KAAT,EAAgB0C,KAAhB,EAAuBC,GAAvB,EAA2B;AACpD,YAAGD,SAASC,IAAIf,MAAJ,GAAW,CAAvB,EAAyB;AACxB5B,eAAM6C,OAAN,GAAgB,MAAKG,QAArB;AACA,SAFD,MAEK;AACJ,aAAGhD,MAAMA,KAAT,EAAe;AACdA,gBAAM6C,OAAN,GAAiB7C,MAAMA,KAAN,GAAY8C,KAAb,GAAoB,GAApC;AACA9C,gBAAM6C,OAAN,GAAgBpC,KAAKC,KAAL,CAAWV,MAAM6C,OAAjB,CAAhB;AACAG,sBAAYhD,MAAM6C,OAAlB;AACA;AACD;AACF,QAVD;AAWA;AACC;;;mCAEaK,U,EAAY;AAC3B,aAAOA,UAAP;AACE;;;oCAEcC,Q,EAAU;AACvB,WAAK5B,MAAL,GAAc4B,SAASC,GAAT,CAAa,KAAKC,aAAL,CAAmBnE,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA,WAAKsC,IAAL,GAAY,KAAKC,WAAL,CAAiB,KAAKF,MAAtB,CAAZ;AACA,WAAKpB,MAAL,CAAY,KAAKqB,IAAjB;AACD;;;mCAEa;AACb,UAAI8B,UAAU;AACbC,cAAM,EADO,EACJC,MAAK,EADD,EACIC,MAAK,OADT,EACiBzD,OAAM,CADvB,EACyB6C,SAAQ,IADjC,EACsC9C,QAAQ;AAD9C,OAAd;AAGA,WAAKjB,KAAL,CAAWH,WAAX,CAAuByD,IAAvB,CAA4BkB,OAA5B;AACA;;;oCAEc;AACd,UAAIA,UAAU;AACbC,cAAM,EADO,EACJC,MAAK,EADD,EACIxD,OAAO,CADX,EACa6C,SAAQ,IADrB,EAC0B9C,QAAQ;AADlC,OAAd;AAGA,WAAKjB,KAAL,CAAWF,OAAX,CAAmBwD,IAAnB,CAAwBkB,OAAxB;AACA;;;iCAEWZ,K,EAAO;AAClB,WAAK5D,KAAL,CAAWH,WAAX,CAAuB0D,MAAvB,CAA8BK,KAA9B,EAAqC,CAArC;AACA;;;kCAEYA,K,EAAO;AACnB,WAAK5D,KAAL,CAAWF,OAAX,CAAmByD,MAAnB,CAA0BK,KAA1B,EAAiC,CAAjC;AACA,UAAII,QAAQ,CAAZ;AACA,WAAKhE,KAAL,CAAWF,OAAX,CAAmB6D,OAAnB,CAA2B,UAASzC,KAAT,EAAgB0C,KAAhB,EAAuBC,GAAvB,EAA2B;AACrDG,gBAAS9C,MAAMA,KAAf;AACA,OAFD;AAGA,WAAKlB,KAAL,CAAWF,OAAX,CAAmB6D,OAAnB,CAA2B,UAASzC,KAAT,EAAgB0C,KAAhB,EAAuBC,GAAvB,EAA2B;AACrD3C,aAAM6C,OAAN,GAAiB7C,MAAMA,KAAN,GAAY8C,KAAb,GAAoB,GAApB,GAAwB,GAAxC;AACA,OAFD;AAGA;;;0BACIY,K,EAAOC,I,EAAM;AACnB,WAAK5E,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC3B,WAAM4E,kBAAkBD,KAAKE,IAAL,CAAU,kBAAV,CAAxB;AACA,WAAMC,iBAAiBH,KAAKE,IAAL,CAAU,iBAAV,CAAvB;AACHC,sBAAeC,GAAf,CAAmB,QAAnB,EAA8BH,gBAAgB,CAAhB,EAAmBI,YAAnB,GAAgC,EAAjC,GAAqC,IAAlE;AACA,OAJD;AAKE;;;;KA7NoC/F,gB;;;;AAgOvCG,qBAAkB6F,WAAlB,GAAgC,aAAhC","file":"progresschart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport './css/panel.css!';\n\nexport class ProgressChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.hiddenSeries = {};\n\n    var panelDefaults = {\n\t\tcolorArr:['#5eb1e4','#4888e0','#2adf6e','#FFB90F','#FF4500'],\n\t\tprogressArr:[],\n\t\tbarsArr:[]\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-progress-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n\tthis.addProgress.bind(this);\n\tthis.addBarMember.bind(this);\n\tthis.delProgress.bind(this);\n\tthis.delBarMember.bind(this);\n  }\n  \n  setUnitFormat(subItem, obj) {\t\n\tobj.format = subItem.value;\n\tobj.valueShow = this.formatValue(obj.value, subItem.value);\n    this.render();\n  }\n  \n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec);\n    var norm = delta / magn; // norm is between 1.0 and 10.0\n    var size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  formatValue(value, format) {\n    var decimalInfo = this.getDecimalsForValue(value);\n    var formatFunc = kbn.valueFormats[format];\n    if (formatFunc) {\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n    }\n    return value;\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n  \n  checkSeries(targets, series){\n\tlet seriesFull = [];\n\tif(targets.length == series.length){\n\t\treturn seriesFull = series;\n\t}else{\n\t\tlet fillFlag = false;\n\t\tfor(var i=0,length = targets.length; i<length; i++){\n\t\t\tfor(var j=0,sLen = series.length; j<sLen; j++){\n\t\t\t\tif(targets[i].item.filter == series[j].target){\n\t\t\t\t\tseriesFull.push(series[j]);\n\t\t\t\t\tfillFlag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tfillFlag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(fillFlag){\n\t\t\t\tseriesFull.splice(i, 0, {'target':targets[i].item.filter, datapoints:[]});\n\t\t\t}\n\t\t}\n\t}\n\treturn seriesFull;\n  }\n\n  parseSeries(series) {\t\n\tif(series && series.length > 0){\n\t\tseries = this.checkSeries(this.panel.targets, series);\n\t\tlet that = this;\n\t\tthis.panel.progressArr.forEach(function(value, index, arr){\n\t\t\t if(series[index] && series[index].datapoints){\n\t\t\t\t let datapoints = series[index].datapoints;\n\t\t\t\t if(datapoints.length > 0){\n\t\t\t\t\t value.value = datapoints[datapoints.length-1][0];\n\t\t\t\t\t value.valueShow = that.formatValue(value.value, value.format);\n\t\t\t\t\t let perValue = datapoints[datapoints.length-1][0];\n\t\t\t\t\t if(perValue>100){\n\t\t\t\t\t\t perValue = 100;\n\t\t\t\t\t }\n\t\t\t\t\t if(perValue < 0){\n\t\t\t\t\t\t perValue = 0;\n\t\t\t\t\t }\n\t\t\t\t\t value.percent = perValue+'%';\n\t\t\t\t }else{\n\t\t\t\t\t value.value = 0;\n\t\t\t\t\t value.valueShow = 'N/A'\n\t\t\t\t\t value.percent = '0%';\n\t\t\t\t }\n\t\t\t }\n\t\t});\n\n\t\tlet total = 0;\n\t\tlet proLen = this.panel.progressArr.length;\n\t\tlet perTotal = 0;\n\t\tfor(var i=0; i<this.panel.barsArr.length; i++){\n\t\t\tlet indTmp = proLen + i;\n\t\t\tif(series[indTmp] && series[indTmp].datapoints){\n\t\t\t\t let datapoints = series[indTmp].datapoints; \n\t\t\t\t if(datapoints.length > 0){\n\t\t\t\t\t this.panel.barsArr[i].value = datapoints[datapoints.length-1][0];\n\t\t\t\t\t total += this.panel.barsArr[i].value;\n\t\t\t\t\t this.panel.barsArr[i].valueShow = this.formatValue(this.panel.barsArr[i].value, this.panel.barsArr[i].format);\n\t\t\t\t }else{\n\t\t\t\t\t this.panel.barsArr[i].value = 0;\n\t\t\t\t\t this.panel.barsArr[i].valueShow = 'N/A';\n\t\t\t\t }\n\t\t\t}else{\n\t\t\t\t total += this.panel.barsArr[i].value;\n\t\t\t}\n\t\t}\n\t\tthis.panel.barsArr.forEach(function(value, index, arr){\n\t\t\t if(index == arr.length-1){\n\t\t\t\t value.percent = 100- perTotal;\n\t\t\t }else{\n\t\t\t\t if(value.value){\n\t\t\t\t\t value.percent = (value.value/total)*100;\n\t\t\t\t\t value.percent = Math.floor(value.percent);\n\t\t\t\t\t perTotal += value.percent;\n\t\t\t\t }\n\t\t\t }\n\t\t})\n\t}\t\n  }\n  \n  seriesHandler(seriesData) {\n\treturn seriesData;\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n  \n  addProgress() {\n\t  let objTemp = {\n\t\t  label:'',unit:'',type:'solid',value:0,percent:'0%',format: 'short'\n\t  };\n\t  this.panel.progressArr.push(objTemp);\n  }\n  \n  addBarMember() {\n\t  let objTemp = {\n\t\t  label:'',unit:'',value: 0,percent:'0%',format: 'short'\n\t  };\n\t  this.panel.barsArr.push(objTemp); \n  }\n  \n  delProgress(index) {\n\t  this.panel.progressArr.splice(index, 1); \n  }\n  \n  delBarMember(index) {\n\t  this.panel.barsArr.splice(index, 1); \n\t  let total = 0;\n\t  this.panel.barsArr.forEach(function(value, index, arr){\n\t\t  total += value.value;\n\t  })\n\t  this.panel.barsArr.forEach(function(value, index, arr){\n\t\t  value.percent = (value.value/total)*100+'%';\n\t  })\t  \n  }\n  link(scope, elem) {\n\tthis.events.on('render', () => {\n\t    const $panelContainer = elem.find('.panel-container');\n\t    const $progressPanel = elem.find('.progress-panel');\n\t\t$progressPanel.css('height', ($panelContainer[0].offsetHeight-40)+'px');\n\t});\n  }\n}\n\nProgressChartCtrl.templateUrl = 'module.html';\n"]}