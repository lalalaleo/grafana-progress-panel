{"version":3,"sources":["../src/progresschart_ctrl.js"],"names":["MetricsPanelCtrl","_","unit","kbn","ProgressChartCtrl","$scope","$injector","$rootScope","hiddenSeries","panelDefaults","colorArr","progressArr","barsArr","dataTemp","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","obj","format","value","valueShow","formatValue","render","series","data","parseSeries","checkProgressArr","length","checkSeries","targets","forEach","index","arr","datapoints","perValue","percent","total","proLen","perTotal","i","indTmp","Math","round","floor","seriesData","dataList","map","seriesHandler","proObj","objTempEdit","label","type","objTemp","push","splice","scope","elem","$panelContainer","find","$progressPanel","css","offsetHeight","templateUrl"],"mappings":"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","file":"progresschart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport unit from './unit';\nimport kbn from 'app/core/utils/kbn';\nimport './css/panel.css!';\n\nexport class ProgressChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.hiddenSeries = {};\n\n    var panelDefaults = {\n\t\t\tcolorArr:['#5eb1e4','#4888e0','#2adf6e','#FFB90F','#FF4500'],\n\t\t\tprogressArr:[],\n\t\t\tbarsArr:[]\n\t\t};\n\t\t\n\t\tthis.dataTemp = {\n\t\t\tprogressArr:[],\n\t\t\tbarsArr:[]\n\t\t};\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-progress-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n  \n  setUnitFormat(subItem, obj) {\t\n\t\tobj.format = subItem.value;\n\t\tobj.valueShow = unit.formatValue(this.panel, obj.value, subItem.value);\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\t\n\t\tthis.dataTemp = {\n\t\t\tprogressArr: unit.checkProgressArr(this.panel.progressArr, this.dataTemp.progressArr),\n\t\t\tbarsArr: unit.checkProgressArr(this.panel.barsArr, this.dataTemp.barsArr)\n\t\t};\t\n\t\tif(series && series.length > 0){\n\t\t\tseries = unit.checkSeries(this.panel.targets, series);\n\t\t\tthis.dataTemp.progressArr.forEach((value, index, arr) => {\n\t\t\t\tif(series[index] && series[index].datapoints){\n\t\t\t\t\tlet datapoints = series[index].datapoints;\n\t\t\t\t\tif(datapoints.length > 0){\n\t\t\t\t\t\tvalue.value = datapoints[datapoints.length-1][0];\n\t\t\t\t\t\tvalue.valueShow = unit.formatValue(this.panel, value.value, this.panel.progressArr[index].format);\n\t\t\t\t\t\tlet perValue = datapoints[datapoints.length-1][0];\n\t\t\t\t\t\tif(perValue>100){\n\t\t\t\t\t\t\tperValue = 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(perValue < 0){\n\t\t\t\t\t\t\tperValue = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue.percent = perValue;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvalue.value = 0;\n\t\t\t\t\t\tvalue.valueShow = 'N/A';\n\t\t\t\t\t\tvalue.percent = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet total = 0,\n\t\t\t\t\tproLen = this.panel.progressArr.length,\n\t\t\t\t\tperTotal = 0;\n\t\t\tfor(var i=0; i<this.dataTemp.barsArr.length; i++){\n\t\t\t\tlet indTmp = proLen + i;\n\t\t\t\tif(series[indTmp] && series[indTmp].datapoints){\n\t\t\t\t\tlet datapoints = series[indTmp].datapoints; \n\t\t\t\t\tif(datapoints.length > 0){\n\t\t\t\t\t\tthis.dataTemp.barsArr[i].value = datapoints[datapoints.length-1][0];\n\t\t\t\t\t\ttotal = Math.round(total) + Math.round(this.dataTemp.barsArr[i].value);\n\t\t\t\t\t\tthis.dataTemp.barsArr[i].valueShow = unit.formatValue(this.panel, this.dataTemp.barsArr[i].value, this.panel.barsArr[i].format);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.dataTemp.barsArr[i].value = 0;\n\t\t\t\t\t\tthis.dataTemp.barsArr[i].valueShow = 'N/A';\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\ttotal = Math.round(total) + Math.round(this.dataTemp.barsArr[i].value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dataTemp.barsArr.forEach((value, index, arr) => {\n\t\t\t\tif(index == arr.length-1){\n\t\t\t\t\tvalue.percent = 100- perTotal;\n\t\t\t\t}else{\n\t\t\t\t\tif(value.value){\n\t\t\t\t\t\tvalue.percent = (value.value/total)*100;\n\t\t\t\t\t\tvalue.percent = Math.floor(value.percent);\n\t\t\t\t\t\tperTotal += value.percent;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvalue.percent = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}else{\n\t\t\tthis.dataTemp.progressArr.forEach((value, index, arr) => {\n\t\t\t\tvalue.value = 0;\n\t\t\t\tvalue.valueShow = 'N/A';\n\t\t\t\tvalue.percent = 0;\n\t\t\t})\t\n\t\t\tthis.dataTemp.barsArr.forEach((value, index, arr) => {\n\t\t\t\tvalue.value = 0;\n\t\t\t\tvalue.percent = index == 0? 100:0;\n\t\t\t\tvalue.valueShow = 'N/A';\t \n\t\t\t})\t\n\t\t}\n    return this.dataTemp;\t\n  }\n  \n  seriesHandler(seriesData) {\n\t\treturn seriesData;\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n  \n  getProcessStyle(proObj) {\n\t \treturn {'width': proObj && proObj.percent? proObj.percent+\"%\" : 0 +'%'};\n\t}\n\t\n\tgetBarStyle(index){\n\t\treturn {'width':this.dataTemp.barsArr[index].percent + '%','background-color': this.panel.colorArr[index]};\n\t}\n  \n  addProgress() {\n\t  let objTempEdit = {\n\t\t  label:'',unit:'',type:'solid',format: 'short'\n\t\t},\n\t\tobjTemp = {value:0, valueShow:'', percent:0};\n\t\tthis.panel.progressArr.push(objTempEdit);\n\t  this.dataTemp.progressArr.push(objTemp);\n  }\n  \n  addBarMember() {\n\t  let objTempEdit = {\n\t\t  label:'',unit:'',format: 'short'\n\t\t},\n\t\tobjTemp = {value:0, valueShow:'', percent:0};\n\t\tthis.panel.barsArr.push(objTempEdit);\n\t  this.dataTemp.barsArr.push(objTemp); \n  }\n  \n  delProgress(index) {\n\t\tthis.panel.progressArr.splice(index, 1); \n\t\tthis.dataTemp.progressArr.splice(index, 1); \n\t\tthis.render();\n  }\n  \n  delBarMember(index) {\n\t\tthis.panel.barsArr.splice(index, 1); \n\t\tthis.dataTemp.barsArr.splice(index, 1); \n\t  let total = 0;\n\t  this.dataTemp.barsArr.forEach((value, index, arr) => {\n\t\t  total = Math.round(total) + Math.round(value.value);\n\t  });\n\t  this.dataTemp.barsArr.forEach((value, index, arr) => {\n\t\t\tif(total === 0){\n\t\t\t\tvalue.percent = index==0? 100:0;\n\t\t\t}else{\n\t\t\t\tvalue.percent = (value.value/total)*100;\n\t\t\t}\n\t\t});\n\t\tthis.render();\t  \n  }\n  \n  link(scope, elem) {\n\t\tthis.events.on('render', () => {\n\t\t\tconst $panelContainer = elem.find('.panel-container');\n\t\t\tconst $progressPanel = elem.find('.progress-panel');\n\t\t\t$progressPanel.css('height', ($panelContainer[0].offsetHeight-40)+'px');\n\t\t});\n  }\n}\n\nProgressChartCtrl.templateUrl = 'module.html';\n"]}